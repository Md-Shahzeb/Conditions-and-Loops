Q3. What are loops, and why do we need them? Explain different types of loops with their syntax and examples.
Ans: Loops in JavaScript are a fundamental concept used to repeatedly execute a block of code as long as a specified condition is true.
     They are essential for performing repetitive tasks, automating processes, and iterating over data structures like arrays or objects.
	 We Need Loops because:
	Repetition: Loops help in repeating the execution of code blocks, which is essential for tasks that require	 iteration.
	Automation: They automate repetitive tasks, reducing the need for manual coding.	
	Efficiency: Loops allow efficient data processing and manipulation, especially when dealing with large datasets.
	Flexibility: They offer flexibility in traversing data structures like arrays and objects.

	Following are the different types of loops:

	1. for Loop
	   The for loop is used when you know in advance how many times you want to execute a statement or a block of statements.
	   Syntax:
			for (initialization; condition; increment) {
    			// code block to be executed
			}
     	Example:
		  for (let i = 0; i < 5; i++) {
   		  console.log(i);
		  }
		 // Output: 0 1 2 3 4


	2. while Loop
	   The while loop is used when you want to execute a block of code as long as a specified condition is true.
	   Syntax:
		   while (condition) {
    		  // code block to be executed
		   }
	   Example:
		   let i = 0;
		   while (i < 5) {
    		   console.log(i);
   		   i++;
		  }
		// Output: 0 1 2 3 4


	3. do...while Loop
	  The do...while loop is similar to the while loop, but it executes the block of code once before checking the condition.
	  Syntax:
		do {
   		 // code block to be executed
		} while (condition);
	  Example:
		  let i = 0;
		  do {
              console.log(i);
    		  i++;
      	  } while (i < 5);
		 // Output: 0 1 2 3 4


	4. for...in Loop
	   The for...in loop is used to iterate over the enumerable properties of an object.
	   Syntax:
		for (let key in object) {
    		// code block to be executed
		}
		Example:
		    const person = {fname: "John", lname: "Doe", age: 25};
		    for (let key in person) {
    		    console.log(key + ": " + person[key]);
			}
		// Output: 
	      // fname: John
		// lname: Doe
		// age: 25


	5. for...of Loop
	   The for...of loop is used to iterate over iterable objects (like arrays, strings, maps, etc.).
	   Syntax:
		for (let value of iterable) {
    		// code block to be executed
		}
	     Example:
			const array = [1, 2, 3, 4, 5];
			for (let value of array) {
    			console.log(value);
			}
		// Output: 1 2 3 4 5